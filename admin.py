from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram import types, Dispatcher
from create_bot import dp, bot
from aiogram.dispatcher.filters import Text
import client_kb
import os
from note import FAM, na, chat, the_date, dostavka, text_fire

class FSMAdmin(StatesGroup):
    Alaska_ = State()
    Morshinska_ = State()
    bottle_ = State()
    add_item_ = State()
    the_note_ = State()
    Price_Alaska = State()
    Price_Morshinska = State()
    Price_bottle = State()
    Price_pompa = State()
    Price_kuler = State()
    Photo_Alaska = State()
    Photo_Morshin = State()
    Photo_bottle = State()
    Photo_pompa = State()
    Dostavka = State()
    Text_ = State()

#–ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
@dp.message_handler(commands='Rahunok', state=None)
async def cm_start(message: types.Message):
    if message.from_user.id in FAM:
        q1 = '–°–∫—ñ–ª—å–∫–∏ –±—É—Ç–ª—ñ–≤ –ê–õ–Ø–°–ö–ê –∫—É–ø—É—î –∫–ª—ñ—î–Ω—Ç?\n\n'\
             '–õ–∏—à–µ —Ü–∏—Ñ—Ä—É, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 2\n\n'\
             '—è–∫—â–æ —É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ –Ω–µ–º–∞—î –ê–ª—è—Å–∫–∏, –Ω–∞–ø–∏—à–∏: 0\n\n'\
             'PS: —è–∫—â–æ —Ä–∞—Ö—É–Ω–æ–∫ –≤–∂–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω ‚Äì –Ω–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É:\n/cancel'
        await FSMAdmin.Alaska_.set()
        await message.answer(q1)
        await message.delete()
    else:
        await message.answer(na)
        await message.delete()

#–í—ã—Ö–æ–¥ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏–π –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–µ—Ä–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å
@dp.message_handler(state="*", commands='cancel')
@dp.message_handler(Text(equals='s', ignore_case=True), state="*")
async def cancel_handler(message: types.Message, state: FSMContext):
    if message.from_user.id in FAM:
        current_state = await state.get_state()
        if current_state is None:
            return
        c = '–î–æ–±—Ä–µ\nüíôüíõ\n–ë–µ—Ä–µ–∂–∏ —Å–µ–±–µ —Ç–∞ —Å–≤–æ—ó—Ö –±–ª–∏–∑—å–∫–∏—Ö!'
        await message.answer(c, reply_markup=client_kb.kb_client)
        await state.finish()

#–õ–æ–≤–∏–º 1 –æ—Ç–≤–µ—Ç –∏ –ø–∏—à–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å
@dp.message_handler(state=FSMAdmin.Alaska_)
async def Alaska_(message: types.Message, state: FSMContext):
    if message.from_user.id in FAM:
        q2 = '–°–∫—ñ–ª—å–∫–∏ –±—É—Ç–ª—ñ–≤ –ú–û–†–®–ò–ù–°–¨–ö–ê –∫—É–ø—É—î –∫–ª—ñ—î–Ω—Ç?\n\n'\
             '–õ–∏—à–µ —Ü–∏—Ñ—Ä—É, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 1\n\n'\
             '—è–∫—â–æ —É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ –Ω–µ–º–∞—î –ú–û–†–®–ò–ù–°–¨–ö–ê, –Ω–∞–ø–∏—à–∏: 0\n\n'\
             'PS: —è–∫—â–æ —Ä–∞—Ö—É–Ω–æ–∫ –≤–∂–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω ‚Äì –Ω–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É:\n/cancel'
        async with state.proxy() as data:
            data['Alaska_'] = int(message.text)
        await FSMAdmin.next()
        await message.answer(q2)

#–õ–æ–≤–∏–º 2 –æ—Ç–≤–µ—Ç
@dp.message_handler(state=FSMAdmin.Morshinska_)
async def Morshinska_(message: types.Message, state: FSMContext):
    if message.from_user.id in FAM:
        q3 = '–°–∫—ñ–ª—å–∫–∏ –ø–æ—Ä–æ–∂–Ω—ñ—Ö –±—É—Ç–ª—ñ–≤ –∫—É–ø—É—î –∫–ª—ñ—î–Ω—Ç?\n\n'\
             '–Ø–∫—â–æ —É –∫–ª—ñ—î–Ω—Ç–∞ —î –≤—Å—è —Ç–∞—Ä–∞ –Ω–∞ –æ–±–º—ñ–Ω, –Ω–∞–ø–∏—à–∏: 0\n\n' \
             'PS: —è–∫—â–æ —Ä–∞—Ö—É–Ω–æ–∫ –≤–∂–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω ‚Äì –Ω–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É:\n/cancel'
        async with state.proxy() as data:
            data['Morshinska_'] = int(message.text)
        await FSMAdmin.next()
        await message.answer(q3)

#–õ–æ–≤–∏–º 3 –æ—Ç–≤–µ—Ç
@dp.message_handler(state=FSMAdmin.bottle_)
async def bottle_(message: types.Message, state: FSMContext):
    q4 = '–Ø–∫—â–æ —î –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π —Ç–æ–≤–∞—Ä (–ø–æ–º–ø–∞, —Å—Ç–∞–∫–∞–Ω—á–∏–∫–∏ —Ç–∞ —Ç–ø), –Ω–∞–ø–∏—à–∏ –Ω–∞ —è–∫—É —Å—É–º—É –≤ –≥—Ä–Ω.\n'\
         'H–∞–ø—Ä–∏–∫–ª–∞–¥: 186\n'\
         '–Ø–∫—â–æ –Ω—ñ—á–æ–≥–æ —Ü—å–æ–≥–æ –Ω–µ–º–∞—î, –Ω–∞–ø–∏—à–∏: 0\n\n'\
         'PS: —è–∫—â–æ —Ä–∞—Ö—É–Ω–æ–∫ –≤–∂–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω ‚Äì –Ω–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É:\n/cancel'
    if message.from_user.id in FAM:
        async with state.proxy() as data:
            data['bottle_'] = int(message.text)
        await FSMAdmin.next()
        await message.answer(q4)

#–õ–æ–≤–∏–º 4 –æ—Ç–≤–µ—Ç
@dp.message_handler(state=FSMAdmin.add_item_)
async def add_item_(message: types.Message, state: FSMContext):
    q5 = '–ù–∞–ø–∏—à–∏ –ø—Ä–∏–º—ñ—Ç–∫—É –¥–æ —Ä–∞—Ö—É–Ω–∫—É, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ —Ä–æ–∑–ø–∏—à–∏ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π —Ç–æ–≤–∞—Ä, ' \
         ' —è–∫—â–æ –≤—ñ–Ω —î –∞–±–æ –¥–æ —è–∫–æ–≥–æ —á–∏—Å–ª–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –∑—Ä–æ–±–∏—Ç–∏ –ø—Ä–æ–ø–ª–∞—Ç—É.'\
         ' –Ø–∫—â–æ –ø—Ä–∏–º—ñ—Ç–∫–∏ –Ω–µ–º–∞—î, –Ω–∞–ø–∏—à–∏: 0 –∞–±–æ -\n\n' \
         'PS: —è–∫—â–æ —Ä–∞—Ö—É–Ω–æ–∫ –≤–∂–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω ‚Äì –Ω–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É:\n/cancel'
    if message.from_user.id in FAM:
        async with state.proxy() as data:
            data['add_item_'] = float(message.text)
        await FSMAdmin.next()
        await message.answer(q5)

#–õ–æ–≤–∏–º 5 –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª—É—á–µ–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
@dp.message_handler(state=FSMAdmin.the_note_)
async def the_note_(message: types.Message, state: FSMContext):
    if message.from_user.id in FAM:
        '''with open('the_note.txt', 'w') as tn:
            tn.write(message.text)'''
        async with state.proxy() as data:
            data['the_note_'] = message.text
        async with state.proxy() as base_1:
            smg = f'–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user} \n' \
                  f'–∑—Ä–æ–±–∏–≤ —Ä–∞—Ö—É–Ω–æ–∫:\n{base_1}'
            await bot.send_message(chat, smg)
            await message.answer('üëç üëå')
            alaska = data['Alaska_']
            morshin = data['Morshinska_']
            bottle = data['bottle_']
            add_item = data['add_item_']
            the_note = data['the_note_']
            with open('alaska_price.txt', 'r') as ap:
                alaska_price = float((ap.read()))
            with open('morshin_price.txt', 'r') as mp:
                morshin_price = float((mp.read()))
            with open('bottle_price.txt', 'r') as bp:
                bottle_price = float((bp.read()))

            total = alaska * alaska_price + morshin * morshin_price \
                    + bottle * bottle_price + add_item
            bill = f'–§–û–ü –ë–µ—à–ª—è–≥–∞ –ú–∏—Ö–∞–π–ª–æ –ú–∏—Ö–∞–π–ª–æ–≤–∏—á\n' \
                   f'IBAN: UA183220010000026006320059503\n' \
                   f'–Ü–ü–ù/–Ñ–î–†–ü–û–£: 2116415395\n' \
                   f'–º/—Ç +38(098)476-03-68\n\n' \
                   f'—Ä–∞—Ö—É–Ω–æ–∫ –≤—ñ–¥ {the_date}\n\n' \
                   f'–ø–∏—Ç–Ω–∞ –≤–æ–¥–∞ –ê–ª—è—Å–∫–∞ 18,9–ª:\n' \
                   f'{alaska} x {alaska_price} –≥—Ä–Ω\n' \
                   f'–ø–∏—Ç–Ω–∞ –≤–æ–¥–∞ –ú–æ—Ä—à–∏–Ω—Å—å–∫–∞ 18,9–ª:\n' \
                   f'{morshin} x {morshin_price} –≥—Ä–Ω\n' \
                   f'–ø–æ—Ä–æ–∂–Ω—ñ–π –±—É—Ç–ª—å:\n' \
                   f'{bottle} x {bottle_price} –≥—Ä–Ω\n' \
                   f'–¥–æ–¥–∞—Ç–∫–æ–≤–∏–π —Ç–æ–≤–∞—Ä:\n{add_item} –≥—Ä–Ω\n' \
                   f'–ø—Ä–∏–º—ñ—Ç–∫–∞:\n- {the_note} -\n\n' \
                   f'—Ä–∞–∑–æ–º: {total} –≥—Ä–Ω'
            await message.answer(bill, reply_markup=client_kb.kb_client)
            await state.finish()


#–ò–ó–ú–ï–ù–ï–ù–ò–ï –¶–ï–ù = –ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞  –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
@dp.message_handler(commands='–¶—ñ–Ω–∏', state=None)
async def price_start(message: types.Message):
    if message.from_user.id in FAM:
        with open('alaska_price.txt', 'r') as ap:
            a = float((ap.read()))
        q = f'–í–≤–µ–¥–∏ —Ü–µ–Ω—É –Ω–∞ –≤–æ–¥—É –ê–ª—è—Å–∫–∞\n\n' \
            f'–ï—Å–ª–∏ —Ü–µ–Ω–∞ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è - –Ω–∞–ø–∏—à–∏ {int(a)}\n\n'\
            f'–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å, –Ω–∞–∂–º–∏\n'\
            f'/cancel'
        await FSMAdmin.Price_Alaska.set()
        await message.answer(q)
        await message.delete()
    else:
        await message.answer(na)
        await message.delete()

#–õ–æ–≤–∏–º 1 –æ—Ç–≤–µ—Ç –∏ –ø–∏—à–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å
@dp.message_handler(state=FSMAdmin.Price_Alaska)
async def Price_Alaska(message: types.Message, state: FSMContext):
    if message.from_user.id in FAM:
        with open('morshin_price.txt', 'r') as mp:
            m = float((mp.read()))
        q1 = f'–í–≤–µ–¥–∏ —Ü–µ–Ω—É –Ω–∞ –≤–æ–¥—É –ú–æ—Ä—à–∏–Ω—Å–∫–∞—è\n\n'\
             f'–ï—Å–ª–∏ —Ü–µ–Ω–∞ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è - –Ω–∞–ø–∏—à–∏ {int(m)}'
        with open('alaska_price.txt', 'w') as a:
            a.write(message.text)
        async with state.proxy() as data:
            data['Price_Alaska'] = float(message.text)
        await FSMAdmin.next()
        await message.answer(q1)

#–õ–æ–≤–∏–º 2 –æ—Ç–≤–µ—Ç
@dp.message_handler(state=FSMAdmin.Price_Morshinska)
async def Price_Morshinska(message: types.Message, state: FSMContext):
    if message.from_user.id in FAM:
        with open('bottle_price.txt', 'r') as bp:
            b = float((bp.read()))
        q2 = f'–í–≤–µ–¥–∏ —Ü–µ–Ω—É –Ω–∞ –ø—É—Å—Ç–æ–π –±—É—Ç–ª—å\n\n'\
             f'–ï—Å–ª–∏ —Ü–µ–Ω–∞ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è - –Ω–∞–ø–∏—à–∏ {int(b)}'
        with open('morshin_price.txt', 'w') as m:
            m.write(message.text)
        async with state.proxy() as data:
            data['Price_Morshinska'] = float(message.text)
        await FSMAdmin.next()
        await message.answer(q2)

#–õ–æ–≤–∏–º 3 –æ—Ç–≤–µ—Ç
@dp.message_handler(state=FSMAdmin.Price_bottle)
async def Price_bottle(message: types.Message, state: FSMContext):
    if message.from_user.id in FAM:
        with open('pompa_price.txt', 'r') as bp:
            p = float((bp.read()))
        q3 = f'–í–≤–µ–¥–∏ —Ü–µ–Ω—É –Ω–∞ –ø–æ–º–ø—É\n\n' \
             f'–ï—Å–ª–∏ —Ü–µ–Ω–∞ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è - –Ω–∞–ø–∏—à–∏ {int(p)}'
        with open('bottle.txt', 'w') as b:
            b.write(message.text)
        async with state.proxy() as data:
            data['Price_bottle'] = float(message.text)
        await FSMAdmin.next()
        await message.answer(q3)


#–õ–æ–≤–∏–º 4 –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç
@dp.message_handler(state=FSMAdmin.Price_pompa)
async def Price_pompa(message: types.Message, state: FSMContext):
    if message.from_user.id in FAM:
        with open('–∫—É–ª–µ—Ä_price.txt', 'r') as bp:
            p = float((bp.read()))
        q4 = f'–í–≤–µ–¥–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –Ω–∞ –∫—É–ª–µ—Ä\n\n' \
             f'–ï—Å–ª–∏ —Ü–µ–Ω–∞ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è - –Ω–∞–ø–∏—à–∏ {int(p)}'
        with open('pompa_price.txt', 'w') as tn:
            tn.write(message.text)
        async with state.proxy() as data:
            data['Price_pompa'] = float(message.text)
        await FSMAdmin.next()
        await message.answer(q4)


# –õ–æ–≤–∏–º 5 –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª—É—á–µ–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
@dp.message_handler(state=FSMAdmin.Price_kuler)
async def Price_kuler(message: types.Message, state: FSMContext):
    if message.from_user.id in FAM:
        with open('–∫—É–ª–µ—Ä_price.txt', 'w') as tn:
            tn.write(message.text)
        async with state.proxy() as data:
            data['Price_kuler'] = float(message.text)
        async with state.proxy() as base_2:
            smg = f'–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user} \n' \
                  f'–∑–º—ñ–Ω–∏–≤ —Ü—ñ–Ω–∏:\n{base_2}'
            await bot.send_message(chat, smg)
            await message.answer('üëç üëå')
            with open('alaska_price.txt', 'r') as ap:
                alaska_p = float((ap.read()))
            with open('morshin_price.txt', 'r') as mp:
                morshin_p = float((mp.read()))
            with open('bottle_price.txt', 'r') as bp:
                bottle_p = float((bp.read()))
            with open('pompa_price.txt', 'r') as bp:
                pompa_p = float((bp.read()))
            with open('–∫—É–ª–µ—Ä_price.txt', 'r') as kp:
                kuler_p = float((kp.read()))
            report = f'Aqua-Berezivka\n' \
                     f'–¶—ñ–Ω–∏ —Å—Ç–∞–Ω–æ–º –Ω–∞ {the_date}:\n\n'\
                     f'–≤–æ–¥–∞ –ê–ª—è—Å–∫–∞ 18,9–ª = {alaska_p} –≥—Ä–Ω\n' \
                     f'–≤–æ–¥–∞ –ú–æ—Ä—à–∏–Ω—Å—å–∫–∞ 18,9–ª = {morshin_p}\n' \
                     f'–ø–æ—Ä–æ–∂–Ω—ñ–π –±—É—Ç–ª—å 18,9–ª =  {bottle_p} –≥—Ä–Ω\n' \
                     f'–ü–æ–º–ø–∞ –º–µ—Ö–∞–Ω—ñ—á–Ω–∞ = {pompa_p} –≥—Ä–Ω\n' \
                     f'–ö—É–ª–µ—Ä–∏ –≤—ñ–¥ = {kuler_p} –≥—Ä–Ω'
            mistake = '# –µ—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∞ - –Ω–∞—á–Ω–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–Ω–æ–≤–æ:\n/–¶—ñ–Ω–∏'
            await message.answer(report)
            await message.answer(mistake, reply_markup=client_kb.kb_client)
    # –∑–¥–µ—Å—å –º—ã —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—à state –≤ –±–∞–∑—É –¥–∞–Ω—ã—Ö —á–µ—Ä–µ—Ö —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä—É—é —Å–æ–∑–¥–∞–¥–∏–º –ø–æ–∑–∂–µ
            await state.finish()


#–ò–ó–ú–ï–ù–ï–ù–ò–ï –§–û–¢–û –¢–û–í–ê–†–û–´ = –ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞  –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
q0 = '–ü—Ä–∏—à–ª–∏ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ,\n–µ—Å–ª–∏ —ç—Ç–æ –Ω—É–∂–Ω–æ ' \
     '–∑–∞–º–µ–Ω–∏—Ç—å\n—Ä–∞–∑–º–µ—Ä 225*225\n–ù–∞–∑–≤–∞–Ω–∏–µ\n'
q = '# –æ—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å, –Ω–∞–∂–º–∏\n/cancel'
@dp.message_handler(commands='–§–æ—Ç–æ', state=None)
async def photo_start(message: types.Message):
    if message.from_user.id in FAM:
        await FSMAdmin.Photo_Alaska.set()
        q1 = '–ê–ª—è—Å–∫–∞.png'
        with open('–ê–ª—è—Å–∫–∞.png', 'rb') as photo:
            await message.answer_photo(photo, q0+q1)
        await message.answer(q)
        await message.delete()
    else:
        await message.answer(na)
        await message.delete()

# 1 –ª–æ–≤–∏–º —Ñ–æ—Ç–æ –ê–ª—è—Å–∫–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
@dp.message_handler(content_types=['photo'], state=FSMAdmin.Photo_Alaska)
async def Photo_Alaska(message: types.Message, state:FSMContext):
    if message.from_user.id in FAM:
        os.remove('–ê–ª—è—Å–∫–∞.png')
        await message.photo[-1].download("–ê–ª—è—Å–∫–∞.png")
        q1 = '–ú–æ—Ä—à–∏–Ω—Å–∫–∞—è.png'
        async with state.proxy() as date:
            date['Photo_Alaska'] = message.photo[0].file_id
        await FSMAdmin.next()
        await message.answer('—Ñ–æ—Ç–æ –ê–ª—è—Å–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–æ')
        with open('–ú–æ—Ä—à–∏–Ω—Å–∫–∞—è.png', 'rb') as photo:
            await message.answer_photo(photo, q0+q1)
        await message.answer(q)

# 2 –ª–æ–≤–∏–º —Ñ–æ—Ç–æ –ú–æ—Ä—à–∏–Ω—Å—å–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
@dp.message_handler(content_types=['photo'], state=FSMAdmin.Photo_Morshin)
async def Photo_Morshin(message: types.Message, state:FSMContext):
    if message.from_user.id in FAM:
        os.remove('–ú–æ—Ä—à–∏–Ω—Å–∫–∞—è.png')
        await message.photo[0].download("–ú–æ—Ä—à–∏–Ω—Å–∫–∞—è.png")
        async with state.proxy() as date:
            date['Photo_Morshin'] = message.photo[0].file_id
        await FSMAdmin.next()
        await message.answer('—Ñ–æ—Ç–æ –ú–æ—Ä—à–∏–Ω—Å—å–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–æ')
        q1 = 'Bottle.png'
        with open('Bottle.png', 'rb') as photo:
            await message.answer_photo(photo, q0+q1)
        await message.answer(q)

# 3 –ª–æ–≤–∏–º —Ñ–æ—Ç–æ –±—É—Ç–ª—è –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
@dp.message_handler(content_types=['photo'], state=FSMAdmin.Photo_bottle)
async def Photo_bottle(message: types.Message, state:FSMContext):
    if message.from_user.id in FAM:
        os.remove('Bottle.png')
        await message.photo[0].download("Bottle.png")
        async with state.proxy() as date:
            date['Photo_bottle'] = message.photo[0].file_id
        await FSMAdmin.next()
        await message.answer('—Ñ–æ—Ç–æ –±—É—Ç–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–æ')
        q1 = '–ü–æ–º–ø–∞.png'
        with open('–ü–æ–º–ø–∞.png', 'rb') as photo:
            await message.answer_photo(photo, q0+q1)
        await message.answer(q)

# 4 –ª–æ–≤–∏–º —Ñ–æ—Ç–æ –ø–æ–º–ø—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
@dp.message_handler(content_types=['photo'], state=FSMAdmin.Photo_pompa)
async def Photo_pompa(message: types.Message, state:FSMContext):
    if message.from_user.id in FAM:
        os.remove('–ü–æ–º–ø–∞.png')
        await message.photo[0].download("–ü–æ–º–ø–∞.png")
        async with state.proxy() as date:
            date['Photo_bottle'] = message.photo[0].file_id
        await message.answer('—Ñ–æ—Ç–æ –ø–æ–º–ø—ã –∑–∞–≥—Ä—É–∂–µ–Ω–æ')
        async with state.proxy() as base:
            await bot.send_message(chat, base)
            await message.answer('üëç üëå', reply_markup=client_kb.kb_client)
        # –∑–¥–µ—Å—å –º—ã —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—à state –≤ –±–∞–∑—É –¥–∞–Ω—ã—Ö —á–µ—Ä–µ—Ö —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä—É—é —Å–æ–∑–¥–∞–¥–∏–º –ø–æ–∑–∂–µ
        await state.finish()

# –ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é –£–°–õ–û–í–ò–Ø –î–û–°–¢–ê–í–ö–ò
@dp.message_handler(commands='–î–æ—Å—Ç–∞–≤–∫–∞', state=None)
async def start_doastavka(message: types.Message):
    if message.from_user.id in FAM:
        q = f'–£—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–∏–¥–∏—Ç –∫–ª–∏–µ–Ω—Ç –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏' \
            f' –∑–∞–∫–∞–∑–∞:\n=\n{dostavka}\n=\n' \
            f'–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è - –Ω–∞–ø–∏—à–∏ –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º\n' \
            f'PS:–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å - –Ω–∞–∂–º–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É:\n/cancel'
        await FSMAdmin.Dostavka.set()
        await message.answer(q)
        await message.delete()

# –ª–æ–≤–∏–º 1-–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç –∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏:
@dp.message_handler(state=FSMAdmin.Dostavka)
async def Dostavka(message: types.Message, state: FSMContext):
    if message.from_user.id in FAM:
        global dostavka
        dostavka = message.text
        async with state.proxy() as date:
            date['Dostavka'] = message.text
        async with state.proxy() as base:
            await bot.send_message(chat, base)
        await message.answer('üëç üëå', reply_markup=client_kb.kb_client)
        await state.finish()


# –ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é –¢–ï–ö–¢ –î–õ–Ø –†–ê–°–°–´–õ–ö–ò
@dp.message_handler(commands='–¢–µ–∫—Å—Ç', state=None)
async def start_Text(message: types.Message):
    if message.from_user.id in FAM:
        q = f'–¢–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤–∏–¥–∏—Ç –∫–ª–∏–µ–Ω—Ç –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–∏ –±–æ—Ç–æ–º ' \
            f'—Å–º—Å:\n=\n{text_fire}=\n' \
            f'–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç - –Ω–∞–ø–∏—à–∏ –Ω–æ–≤—ã–π —Å–æ–æ–±—â–µ–Ω–∏–µ–º\n' \
            f'PS:–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å - –Ω–∞–∂–º–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É:\n/cancel'
        await FSMAdmin.Text_.set()
        await message.answer(q)
        await message.delete()

# –ª–æ–≤–∏–º 1-–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç –∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:
@dp.message_handler(state=FSMAdmin.Text_)
async def Text_(message: types.Message, state: FSMContext):
    if message.from_user.id in FAM:
        global text_fire
        text_fire = message.text
        async with state.proxy() as date:
            date['Text'] = message.text
        async with state.proxy() as base:
            await bot.send_message(chat, base)
        await message.answer('üëç üëå', reply_markup=client_kb.kb_client)
        await state.finish()
